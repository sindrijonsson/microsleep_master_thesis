2022-12-17 23:23:23.568788: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-12-17 23:23:28.630171: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:23:28.630238: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
2022-12-17 23:23:28.813735: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2022-12-17 23:23:41.947352: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:23:41.948542: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:23:41.948575: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2022-12-17 23:24:01.515304: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.516466: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcublas.so.11'; dlerror: libcublas.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.517026: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcublasLt.so.11'; dlerror: libcublasLt.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.517636: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcufft.so.10'; dlerror: libcufft.so.10: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.518358: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcurand.so.10'; dlerror: libcurand.so.10: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.519071: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcusolver.so.11'; dlerror: libcusolver.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.519849: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcusparse.so.11'; dlerror: libcusparse.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.520532: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudnn.so.8'; dlerror: libcudnn.so.8: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/software/user/open/python/3.9.0/lib:/share/software/user/open/libffi/3.2.1/lib64:/share/software/user/open/sqlite/3.37.2/lib:/share/software/user/open/readline/7.0/lib:/share/software/user/open/tcltk/8.6.6/lib:/share/software/user/open/libressl/3.2.1/lib:/share/software/user/open/zlib/1.2.11/lib
2022-12-17 23:24:01.520552: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1934] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2022-12-17 23:24:01.520981: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
/home/users/sinjon/.local/lib/python3.9/site-packages/keras/initializers/initializers_v2.py:120: UserWarning: The initializer GlorotUniform is unseeded and being called multiple times, which will return identical values  each time (even if the initializer is unseeded). Please update your code to provide a seed to the initializer, or avoid using the same initalizer instance more than once.
  warnings.warn(
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 5/19 epochs in channel 2
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 15/46 epochs in channel 1
Quality control for sample 'edf_data' affected 16/46 epochs in channel 2
Quality control for sample 'edf_data' affected 10/46 epochs in channel 3
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 6/34 epochs in channel 1
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 26/80 epochs in channel 0
Quality control for sample 'edf_data' affected 14/80 epochs in channel 1
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 16/80 epochs in channel 0
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 21/80 epochs in channel 0
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 13/80 epochs in channel 3
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
Quality control for sample 'edf_data' affected 14/80 epochs in channel 2
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
OBS: Auto channel grouping returned groups: [('E1-M1', 'O1-M2'), ('E1-M1', 'O2-M1'), ('E2-M1', 'O1-M2'), ('E2-M1', 'O2-M1')] (required groups: ['EOG', 'EEG'])
